#!/usr/bin/env ruby

require 'optparse'
require 'push'
require 'push-core'

environment = ARGV[0]

config = Push::Daemon::ConfigurationEmpty.new

options = ARGV.options do |opts|
  opts.banner = 'Usage: push <Rails environment> [options]'
  opts.on('-f', '--foreground', 'Run in the foreground. Log is not written.') { config.foreground = true }
  opts.on('-p PATH', '--pid-file PATH', String, 'Path to write PID file. Relative to Rails root unless absolute.') { |path| config.pid_file = path }
  opts.on('-P N', '--push-poll N', Integer, "Frequency in seconds to check for new notifications. Default: 2.") { |n| config.push_poll = n }
  opts.on('-s', '--single-run', 'Only checks once for unsend push messages and exits afterwards.') { config.single_run = true }
  opts.on('-n', '--error-notification', 'Enables error notifications via Airbrake or Bugsnag.') { config.error_notification = true }
  opts.on('-F N', '--feedback-poll N', Integer, "Frequency in seconds to check for feedback for the feedback processor. Default: #{config.feedback_poll}. Use 0 to disable.") { |n| config.feedback_poll = n }
  opts.on('-b PATH', '--feedback-processor PATH', String, "Path to the feedback processor. Default: #{config.feedback_processor}.") { |n| config.feedback_processor = n }
  opts.on('-v', '--version', 'Print this version of push.') { puts "push #{Push::VERSION}"; exit }
  opts.on('-h', '--help', 'You\'re looking at it.') { puts opts; exit }
end

if environment.nil?
  puts options.to_s
  exit 1
end

options.parse!

ENV['RAILS_ENV'] = environment
load 'config/environment.rb'

require 'push/daemon'

Push.config.update(config)
Push::Daemon.start
